import cv2
import numpy as np

# Load video
video_path = 'notebooks/Sample Video.mp4'
cap = cv2.VideoCapture('notebooks/Sample Video.mp4')

# Load advertisement image
ad_image_path = 'notebooks/Advertisement Image.jpg'
ad_image = cv2.imread('notebooks/Advertisement Image.jpg')

# Define region of interest (where advertisement will be inserted)
# This could be a predefined location or detected dynamically
# For simplicity, let's assume a fixed location
roi_x = 100
roi_y = 100

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # Define region of interest in the video frame
    roi = frame[roi_y:roi_y + ad_height, roi_x:roi_x + ad_width]

    # Example: Simulate occlusion by adding a rectangle to the roi
    # You would replace this with your actual occlusion detection/segmentation
    # For demonstration purposes only
    cv2.rectangle(roi, (50, 50), (150, 150), (0, 0, 0), -1)  # Black rectangle as occlusion

    # Insert advertisement image into the video frame
    # Example: Blend advertisement image with the video frame
    # You would replace this with your actual advertisement insertion algorithm
    alpha = 0.5  # Example blending factor
    blended_roi = cv2.addWeighted(roi, 1 - alpha, ad_image, alpha, 0)

    # Replace the region of interest in the original frame with the blended roi
    frame[roi_y:roi_y + ad_height, roi_x:roi_x + ad_width] = blended_roi

    # Display the frame
    cv2.imshow('Video with Advertisement', frame)
    if cv2.waitKey(25) & 0xFF == ord('q'):
        break

# Release video capture and close windows
cap.release()
cv2.destroyAllWindows()
